// Mocks generated by Mockito 5.4.6 from annotations
// in fitness_app/test/layers/data/routines/repositories/routine_repositories_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:fitness_app/core/network/network_info.dart' as _i2;
import 'package:fitness_app/features/routine/data/data_sources/routines_remote_data_source.dart'
    as _i4;
import 'package:fitness_app/features/routine/data/models/routine_model.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i2.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}

/// A class which mocks [RoutineRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRoutineRemoteDataSource extends _i1.Mock
    implements _i4.RoutineRemoteDataSource {
  MockRoutineRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i5.RoutineModel>> getRoutines() => (super.noSuchMethod(
        Invocation.method(
          #getRoutines,
          [],
        ),
        returnValue:
            _i3.Future<List<_i5.RoutineModel>>.value(<_i5.RoutineModel>[]),
      ) as _i3.Future<List<_i5.RoutineModel>>);

  @override
  _i3.Future<int> addRoutine(_i5.RoutineModel? routineModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #addRoutine,
          [routineModel],
        ),
        returnValue: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);

  @override
  _i3.Future<int> updateRoutine(_i5.RoutineModel? routineModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateRoutine,
          [routineModel],
        ),
        returnValue: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);

  @override
  _i3.Future<int> deleteRoutine(int? routineId) => (super.noSuchMethod(
        Invocation.method(
          #deleteRoutine,
          [routineId],
        ),
        returnValue: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);
}

/// A class which mocks [RoutineRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRoutinesRemoteDataSourceForTest extends _i1.Mock
    implements _i4.RoutineRemoteDataSource {
  @override
  _i3.Future<List<_i5.RoutineModel>> getRoutines() => (super.noSuchMethod(
        Invocation.method(
          #getRoutines,
          [],
        ),
        returnValue:
            _i3.Future<List<_i5.RoutineModel>>.value(<_i5.RoutineModel>[]),
        returnValueForMissingStub:
            _i3.Future<List<_i5.RoutineModel>>.value(<_i5.RoutineModel>[]),
      ) as _i3.Future<List<_i5.RoutineModel>>);

  @override
  _i3.Future<int> addRoutine(_i5.RoutineModel? routineModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #addRoutine,
          [routineModel],
        ),
        returnValue: _i3.Future<int>.value(0),
        returnValueForMissingStub: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);

  @override
  _i3.Future<int> updateRoutine(_i5.RoutineModel? routineModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateRoutine,
          [routineModel],
        ),
        returnValue: _i3.Future<int>.value(0),
        returnValueForMissingStub: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);

  @override
  _i3.Future<int> deleteRoutine(int? routineId) => (super.noSuchMethod(
        Invocation.method(
          #deleteRoutine,
          [routineId],
        ),
        returnValue: _i3.Future<int>.value(0),
        returnValueForMissingStub: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);
}
