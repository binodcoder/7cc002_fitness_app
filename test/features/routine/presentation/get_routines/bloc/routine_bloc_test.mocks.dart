// Mocks generated by Mockito 5.4.2 from annotations
// in fitness_app/layers/presentation/routine/bloc/routine_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as i5;
import 'package:dartz/dartz.dart' as i3;
import 'package:fitness_app/core/errors/failures.dart' as i6;
import 'package:fitness_app/core/usecases/usecase.dart' as i8;
import 'package:fitness_app/features/routine/domain/entities/routine.dart'
    as i7;
import 'package:fitness_app/features/routine/domain/usecases/delete_routine.dart'
    as i4;
import 'package:fitness_app/features/routine/domain/usecases/get_routines.dart'
    as i2;
import 'package:mockito/mockito.dart' as i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends i1.Fake implements i3.Either<L, R> {}

/// A class which mocks [GetRoutines].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetRoutines extends i1.Mock implements i2.GetRoutines {
  MockGetRoutines() {
    i1.throwOnMissingStub(this);
  }

  @override
  i5.Future<i3.Either<i6.Failure, List<i7.Routine>>?> call(
          i8.NoParams? noParams) =>
      (super.noSuchMethod(Invocation.method(#call, [noParams]),
              returnValue:
                  Future<i3.Either<i6.Failure, List<i7.Routine>>?>.value(
                      _FakeEither_0<i6.Failure, List<i7.Routine>>()),
              returnValueForMissingStub:
                  Future<i3.Either<i6.Failure, List<i7.Routine>>?>.value(
                      _FakeEither_0<i6.Failure, List<i7.Routine>>()))
          as i5.Future<i3.Either<i6.Failure, List<i7.Routine>>?>);
}

/// A class which mocks [DeleteRoutine].
///
/// See the documentation for Mockito's code generation for more information.
class MockDeleteRoutine extends i1.Mock implements i4.DeleteRoutine {
  MockDeleteRoutine() {
    i1.throwOnMissingStub(this);
  }

  @override
  i5.Future<i3.Either<i6.Failure, int>?> call(int? routineId) =>
      (super.noSuchMethod(Invocation.method(#call, [routineId]),
              returnValue: Future<i3.Either<i6.Failure, int>?>.value(
                  _FakeEither_0<i6.Failure, int>()),
              returnValueForMissingStub:
                  Future<i3.Either<i6.Failure, int>?>.value(
                      _FakeEither_0<i6.Failure, int>()))
          as i5.Future<i3.Either<i6.Failure, int>?>);
}
